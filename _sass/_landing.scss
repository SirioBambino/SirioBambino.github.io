.landing {
  // Set landing width and height to cover the entire page
  width: 100%;
  height: 105vh;

  // Set up flexbox layout to align elements
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: end;

  // Set top padding
  padding-top: $header-height;

  &-wrapper {
    // Set wrapper width, height and bottom margin
    width: $site-content-width;
    height: 100%;
    margin-bottom: -100px;

    // Set position to relative to provide anchor to absolute elements
    position: relative;

    // Set up flexbox layout to align elements
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  // Set up background gradient image
  background-image: linear-gradient(140deg, var(--secondary-colour) 10%, var(--primary-colour));

  // Scale background image to cover the whole container
  background-size: cover;

  // Create parallax effect for background image
  background-attachment: fixed;

  // Set background colour and hide y overflow
  background-color: var(--secondary-colour);
  overflow-y: hidden;

  // Set colour of span text to accent colour
  span {
    @include accent;
  }

  // Set font size and line height of top text
  &-top-text {
    font-size: clamp(
      calc($landing-text-base-min * $landing-top-text-multiplier),
      calc($landing-text-base-size * $landing-top-text-multiplier),
      calc($landing-text-base-max * $landing-top-text-multiplier)
    );
    line-height: 1em;

    text-shadow: rgba(0, 0, 0, 0.3) 1.95px 1.95px 2.6px;
  }

  &-main-text {
    // Set font size and line height of main text
    font-size: clamp(
      calc($landing-text-base-min * $landing-main-text-multiplier),
      calc($landing-text-base-size * $landing-main-text-multiplier),
      calc($landing-text-base-max * $landing-main-text-multiplier)
    );
    line-height: 1.4em;

    // Set up text shadow
    text-shadow: rgba(0, 0, 0, 0.3) 1.95px 1.95px 2.6px;

    // Set colour of span text to accent colour and set position
    span {
      @include accent;
      position: relative;
    }

    // Use before pseudo-element to create a text cursor
    span::before {
      content: "";

      // Position text cursor
      position: absolute;
      top: 50%;
      right: -2.5%;
      transform: translateY(-45%);

      // Set width and height of text cursor
      width: 0.11em;
      height: 1.25em;

      // Set colour to accent colour
      background: var(--accent-colour);

      box-shadow: 1.95px 1.95px 2.6px rgba(0, 0, 0, 0.3);

      // Set up blinking animation
      animation: blink 0.8s steps(1, end) infinite;
    }

    // Stop blinking animation
    span.stop-blinking::before {
      animation: none;
    }

    // Keyframes for blink animation
    @keyframes blink {
      50% {
        opacity: 0;
      }
    }
  }

  &-hr {
    // Set width, height and colour of line
    width: 100%;
    height: 0.2em;
    background-color: var(--accent-colour);

    // Set margin and remove border
    margin: 1.25em 0;
    border: none;

    box-shadow: 1.95px 1.95px 2.6px rgba(0, 0, 0, 0.3);

    // Set up growIn animation
    animation: growIn ease 2s;

    // Keyframes for growIn animation
    @keyframes growIn {
      0% {
        width: 0%;
      }
      100% {
        width: 100%;
      }
    }
  }

  &-arrows {
    // Position arrows
    position: absolute;
    bottom: 9%;

    // Set up moveUp and bounce animation
    animation: moveUp 1.2s cubic-bezier(0.65, 0, 0.35, 1), bounce 1.25s 1.2s ease-in-out infinite;

    // Remove all styling from button
    @include buttonNoStyle();

    // Set colour to accent colour
    @include accent(stroke);

    svg {
      // Set svg width
      width: clamp(25px, 5vw, 35px);

      // Set up svg shadow
      filter: drop-shadow(4px 2px 2.5px rgba(0, 0, 0, 0.3));
    }

    // Keyframes for moveUp animation
    @keyframes moveUp {
      0% {
        bottom: -10%;
      }
      100% {
        bottom: 10%;
      }
    }

    // Keyframes for bounce animation
    @keyframes bounce {
      0% {
        bottom: 10%;
      }
      50% {
        bottom: 9%;
      }
      100% {
        bottom: 10%;
      }
    }
  }

  // .parallax {
  //   transition: transform 0.05s;
  // }

  // Set shape divider colour
  @include shape-divider-colour($secondary-colour);
}

@media only screen and (max-width: 768px) {
  .landing {
    // Set different width for wrapper
    &-wrapper {
      width: $site-content-width-mobile-fixed;
    }

    // Set different font size for top text
    &-top-text {
      font-size: min(
        calc($landing-text-base-size * $landing-top-text-multiplier * 1.8),
        calc($landing-text-base-max * $landing-top-text-multiplier * 0.6)
      );
    }

    // Set different font size for main text
    &-main-text {
      font-size: min(
        calc($landing-text-base-size * $landing-main-text-multiplier * 1.8),
        calc($landing-text-base-max * $landing-main-text-multiplier * 0.6)
      );
    }
  }
}

@media only screen and (max-width: 555px) {
  // Set different width
  .landing-wrapper {
    width: $site-content-width-mobile;
  }
}

@media only screen and (max-height: 500px) {
  // Set a larger height for landing on screens with small height
  .landing {
    height: 150vh;
  }
}
